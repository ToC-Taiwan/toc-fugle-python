# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import entity_pb2 as entity__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import trade_pb2 as trade__pb2


class TradeInterfaceStub(object):
    """TradeInterface is the interface for trade service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.BuyStock = channel.unary_unary(
                '/toc_python_forwarder.TradeInterface/BuyStock',
                request_serializer=trade__pb2.StockOrderDetail.SerializeToString,
                response_deserializer=trade__pb2.TradeResult.FromString,
                )
        self.SellStock = channel.unary_unary(
                '/toc_python_forwarder.TradeInterface/SellStock',
                request_serializer=trade__pb2.StockOrderDetail.SerializeToString,
                response_deserializer=trade__pb2.TradeResult.FromString,
                )
        self.SellFirstStock = channel.unary_unary(
                '/toc_python_forwarder.TradeInterface/SellFirstStock',
                request_serializer=trade__pb2.StockOrderDetail.SerializeToString,
                response_deserializer=trade__pb2.TradeResult.FromString,
                )
        self.CancelStock = channel.unary_unary(
                '/toc_python_forwarder.TradeInterface/CancelStock',
                request_serializer=trade__pb2.OrderID.SerializeToString,
                response_deserializer=trade__pb2.TradeResult.FromString,
                )
        self.BuyFuture = channel.unary_unary(
                '/toc_python_forwarder.TradeInterface/BuyFuture',
                request_serializer=trade__pb2.FutureOrderDetail.SerializeToString,
                response_deserializer=trade__pb2.TradeResult.FromString,
                )
        self.SellFuture = channel.unary_unary(
                '/toc_python_forwarder.TradeInterface/SellFuture',
                request_serializer=trade__pb2.FutureOrderDetail.SerializeToString,
                response_deserializer=trade__pb2.TradeResult.FromString,
                )
        self.SellFirstFuture = channel.unary_unary(
                '/toc_python_forwarder.TradeInterface/SellFirstFuture',
                request_serializer=trade__pb2.FutureOrderDetail.SerializeToString,
                response_deserializer=trade__pb2.TradeResult.FromString,
                )
        self.CancelFuture = channel.unary_unary(
                '/toc_python_forwarder.TradeInterface/CancelFuture',
                request_serializer=trade__pb2.FutureOrderID.SerializeToString,
                response_deserializer=trade__pb2.TradeResult.FromString,
                )
        self.BuyOption = channel.unary_unary(
                '/toc_python_forwarder.TradeInterface/BuyOption',
                request_serializer=trade__pb2.OptionOrderDetail.SerializeToString,
                response_deserializer=trade__pb2.TradeResult.FromString,
                )
        self.SellOption = channel.unary_unary(
                '/toc_python_forwarder.TradeInterface/SellOption',
                request_serializer=trade__pb2.OptionOrderDetail.SerializeToString,
                response_deserializer=trade__pb2.TradeResult.FromString,
                )
        self.SellFirstOption = channel.unary_unary(
                '/toc_python_forwarder.TradeInterface/SellFirstOption',
                request_serializer=trade__pb2.OptionOrderDetail.SerializeToString,
                response_deserializer=trade__pb2.TradeResult.FromString,
                )
        self.CancelOption = channel.unary_unary(
                '/toc_python_forwarder.TradeInterface/CancelOption',
                request_serializer=trade__pb2.OptionOrderID.SerializeToString,
                response_deserializer=trade__pb2.TradeResult.FromString,
                )
        self.GetLocalOrderStatusArr = channel.unary_unary(
                '/toc_python_forwarder.TradeInterface/GetLocalOrderStatusArr',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetSimulateOrderStatusArr = channel.unary_unary(
                '/toc_python_forwarder.TradeInterface/GetSimulateOrderStatusArr',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetOrderStatusByID = channel.unary_unary(
                '/toc_python_forwarder.TradeInterface/GetOrderStatusByID',
                request_serializer=trade__pb2.OrderID.SerializeToString,
                response_deserializer=trade__pb2.TradeResult.FromString,
                )
        self.GetNonBlockOrderStatusArr = channel.unary_unary(
                '/toc_python_forwarder.TradeInterface/GetNonBlockOrderStatusArr',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=entity__pb2.ErrorMessage.FromString,
                )
        self.GetFuturePosition = channel.unary_unary(
                '/toc_python_forwarder.TradeInterface/GetFuturePosition',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=trade__pb2.FuturePositionArr.FromString,
                )
        self.GetStockPosition = channel.unary_unary(
                '/toc_python_forwarder.TradeInterface/GetStockPosition',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=trade__pb2.StockPositionArr.FromString,
                )
        self.GetSettlement = channel.unary_unary(
                '/toc_python_forwarder.TradeInterface/GetSettlement',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=trade__pb2.SettlementList.FromString,
                )
        self.GetAccountBalance = channel.unary_unary(
                '/toc_python_forwarder.TradeInterface/GetAccountBalance',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=trade__pb2.AccountBalance.FromString,
                )
        self.GetMargin = channel.unary_unary(
                '/toc_python_forwarder.TradeInterface/GetMargin',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=trade__pb2.Margin.FromString,
                )


class TradeInterfaceServicer(object):
    """TradeInterface is the interface for trade service
    """

    def BuyStock(self, request, context):
        """BuyStock is the interface for buying stock
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SellStock(self, request, context):
        """SellStock is the interface for selling stock
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SellFirstStock(self, request, context):
        """SellFirstStock is the interface for selling first stock
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelStock(self, request, context):
        """CancelStock is the interface for canceling stock
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BuyFuture(self, request, context):
        """BuyFuture is the interface for buying future
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SellFuture(self, request, context):
        """SellFuture is the interface for selling future
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SellFirstFuture(self, request, context):
        """SellFirstFuture is the interface for selling first future
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelFuture(self, request, context):
        """CancelFuture is the interface for canceling future
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BuyOption(self, request, context):
        """BuyFuture is the interface for buying future
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SellOption(self, request, context):
        """SellFuture is the interface for selling future
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SellFirstOption(self, request, context):
        """SellFirstFuture is the interface for selling first future
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelOption(self, request, context):
        """CancelFuture is the interface for canceling future
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLocalOrderStatusArr(self, request, context):
        """GetLocalOrderStatusArr is the interface for getting local order status array
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSimulateOrderStatusArr(self, request, context):
        """GetSimulateOrderStatusArr is the interface for getting simulate order status array
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrderStatusByID(self, request, context):
        """GetOrderStatusByID is the interface for getting order status by id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNonBlockOrderStatusArr(self, request, context):
        """GetNonBlockOrderStatusArr is the interface for getting non block order status array
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFuturePosition(self, request, context):
        """GetFuturePosition is the interface for getting future position
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStockPosition(self, request, context):
        """GetStockPosition is the interface for getting stock position
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSettlement(self, request, context):
        """GetSettlement is the interface for getting settlement
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAccountBalance(self, request, context):
        """GetAccountBalance is the interface for getting account balance
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMargin(self, request, context):
        """GetMargin is the interface for getting margin
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TradeInterfaceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'BuyStock': grpc.unary_unary_rpc_method_handler(
                    servicer.BuyStock,
                    request_deserializer=trade__pb2.StockOrderDetail.FromString,
                    response_serializer=trade__pb2.TradeResult.SerializeToString,
            ),
            'SellStock': grpc.unary_unary_rpc_method_handler(
                    servicer.SellStock,
                    request_deserializer=trade__pb2.StockOrderDetail.FromString,
                    response_serializer=trade__pb2.TradeResult.SerializeToString,
            ),
            'SellFirstStock': grpc.unary_unary_rpc_method_handler(
                    servicer.SellFirstStock,
                    request_deserializer=trade__pb2.StockOrderDetail.FromString,
                    response_serializer=trade__pb2.TradeResult.SerializeToString,
            ),
            'CancelStock': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelStock,
                    request_deserializer=trade__pb2.OrderID.FromString,
                    response_serializer=trade__pb2.TradeResult.SerializeToString,
            ),
            'BuyFuture': grpc.unary_unary_rpc_method_handler(
                    servicer.BuyFuture,
                    request_deserializer=trade__pb2.FutureOrderDetail.FromString,
                    response_serializer=trade__pb2.TradeResult.SerializeToString,
            ),
            'SellFuture': grpc.unary_unary_rpc_method_handler(
                    servicer.SellFuture,
                    request_deserializer=trade__pb2.FutureOrderDetail.FromString,
                    response_serializer=trade__pb2.TradeResult.SerializeToString,
            ),
            'SellFirstFuture': grpc.unary_unary_rpc_method_handler(
                    servicer.SellFirstFuture,
                    request_deserializer=trade__pb2.FutureOrderDetail.FromString,
                    response_serializer=trade__pb2.TradeResult.SerializeToString,
            ),
            'CancelFuture': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelFuture,
                    request_deserializer=trade__pb2.FutureOrderID.FromString,
                    response_serializer=trade__pb2.TradeResult.SerializeToString,
            ),
            'BuyOption': grpc.unary_unary_rpc_method_handler(
                    servicer.BuyOption,
                    request_deserializer=trade__pb2.OptionOrderDetail.FromString,
                    response_serializer=trade__pb2.TradeResult.SerializeToString,
            ),
            'SellOption': grpc.unary_unary_rpc_method_handler(
                    servicer.SellOption,
                    request_deserializer=trade__pb2.OptionOrderDetail.FromString,
                    response_serializer=trade__pb2.TradeResult.SerializeToString,
            ),
            'SellFirstOption': grpc.unary_unary_rpc_method_handler(
                    servicer.SellFirstOption,
                    request_deserializer=trade__pb2.OptionOrderDetail.FromString,
                    response_serializer=trade__pb2.TradeResult.SerializeToString,
            ),
            'CancelOption': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelOption,
                    request_deserializer=trade__pb2.OptionOrderID.FromString,
                    response_serializer=trade__pb2.TradeResult.SerializeToString,
            ),
            'GetLocalOrderStatusArr': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLocalOrderStatusArr,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetSimulateOrderStatusArr': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSimulateOrderStatusArr,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetOrderStatusByID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrderStatusByID,
                    request_deserializer=trade__pb2.OrderID.FromString,
                    response_serializer=trade__pb2.TradeResult.SerializeToString,
            ),
            'GetNonBlockOrderStatusArr': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNonBlockOrderStatusArr,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=entity__pb2.ErrorMessage.SerializeToString,
            ),
            'GetFuturePosition': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFuturePosition,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=trade__pb2.FuturePositionArr.SerializeToString,
            ),
            'GetStockPosition': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStockPosition,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=trade__pb2.StockPositionArr.SerializeToString,
            ),
            'GetSettlement': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSettlement,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=trade__pb2.SettlementList.SerializeToString,
            ),
            'GetAccountBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccountBalance,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=trade__pb2.AccountBalance.SerializeToString,
            ),
            'GetMargin': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMargin,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=trade__pb2.Margin.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'toc_python_forwarder.TradeInterface', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TradeInterface(object):
    """TradeInterface is the interface for trade service
    """

    @staticmethod
    def BuyStock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/toc_python_forwarder.TradeInterface/BuyStock',
            trade__pb2.StockOrderDetail.SerializeToString,
            trade__pb2.TradeResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SellStock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/toc_python_forwarder.TradeInterface/SellStock',
            trade__pb2.StockOrderDetail.SerializeToString,
            trade__pb2.TradeResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SellFirstStock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/toc_python_forwarder.TradeInterface/SellFirstStock',
            trade__pb2.StockOrderDetail.SerializeToString,
            trade__pb2.TradeResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelStock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/toc_python_forwarder.TradeInterface/CancelStock',
            trade__pb2.OrderID.SerializeToString,
            trade__pb2.TradeResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BuyFuture(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/toc_python_forwarder.TradeInterface/BuyFuture',
            trade__pb2.FutureOrderDetail.SerializeToString,
            trade__pb2.TradeResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SellFuture(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/toc_python_forwarder.TradeInterface/SellFuture',
            trade__pb2.FutureOrderDetail.SerializeToString,
            trade__pb2.TradeResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SellFirstFuture(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/toc_python_forwarder.TradeInterface/SellFirstFuture',
            trade__pb2.FutureOrderDetail.SerializeToString,
            trade__pb2.TradeResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelFuture(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/toc_python_forwarder.TradeInterface/CancelFuture',
            trade__pb2.FutureOrderID.SerializeToString,
            trade__pb2.TradeResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BuyOption(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/toc_python_forwarder.TradeInterface/BuyOption',
            trade__pb2.OptionOrderDetail.SerializeToString,
            trade__pb2.TradeResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SellOption(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/toc_python_forwarder.TradeInterface/SellOption',
            trade__pb2.OptionOrderDetail.SerializeToString,
            trade__pb2.TradeResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SellFirstOption(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/toc_python_forwarder.TradeInterface/SellFirstOption',
            trade__pb2.OptionOrderDetail.SerializeToString,
            trade__pb2.TradeResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelOption(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/toc_python_forwarder.TradeInterface/CancelOption',
            trade__pb2.OptionOrderID.SerializeToString,
            trade__pb2.TradeResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLocalOrderStatusArr(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/toc_python_forwarder.TradeInterface/GetLocalOrderStatusArr',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSimulateOrderStatusArr(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/toc_python_forwarder.TradeInterface/GetSimulateOrderStatusArr',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrderStatusByID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/toc_python_forwarder.TradeInterface/GetOrderStatusByID',
            trade__pb2.OrderID.SerializeToString,
            trade__pb2.TradeResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNonBlockOrderStatusArr(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/toc_python_forwarder.TradeInterface/GetNonBlockOrderStatusArr',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            entity__pb2.ErrorMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFuturePosition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/toc_python_forwarder.TradeInterface/GetFuturePosition',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            trade__pb2.FuturePositionArr.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStockPosition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/toc_python_forwarder.TradeInterface/GetStockPosition',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            trade__pb2.StockPositionArr.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSettlement(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/toc_python_forwarder.TradeInterface/GetSettlement',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            trade__pb2.SettlementList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAccountBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/toc_python_forwarder.TradeInterface/GetAccountBalance',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            trade__pb2.AccountBalance.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMargin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/toc_python_forwarder.TradeInterface/GetMargin',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            trade__pb2.Margin.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
